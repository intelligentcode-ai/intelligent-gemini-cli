# Nano PRB Template - Simple One-Line Changes
# For trivial instruction complexity (2 points or less) - AI executes instantly

# ⚠️ CRITICAL: FOLLOW ALL SECTIONS - SKIP NOTHING
# ⚠️ SETTINGS: git_privacy: true = NO AI mentions in commits

id: "[PARENT_ID]-PRB-[NEXT_NUMBER]-[TITLE]-[CURRENT_DATE]"
type: nano-prb
complexity: trivial
priority: "[PRIORITY_LEVEL]"  # CRITICAL, HIGH, MEDIUM, LOW
title: "[AUTO-ROLE] [DESCRIPTION]"

# MANDATORY: Complete Context Section
complete_context:
  project: "Dynamically injected project context from GEMINI.md."
  settings: "Dynamically injected all configuration values."
  git_privacy: "Dynamically injected git_privacy setting from config."
  branch_protection: "Dynamically injected branch_protection from config."
  default_branch: "Dynamically injected default_branch from config."
  branch_strategy: "Dynamically injected branch_prefixes from config."
  best_practices: [] # Dynamically injected relevant best practices (minimal for trivial changes).

# MANDATORY: Requirements Section
requirements:
  functional:
    - "Describe the specific, single change needed (e.g., 'Fix typo in README.md')."
  processual:
    - "Respect git_privacy setting for commit messages"
    - "Follow branch protection if enabled"
    - "Use configured default branch"

# What to do - simple and direct
what_to_do:
  action: "Describe the specific action (e.g., 'Replace text', 'Add line')."
  file: "Specify the path to the file (e.g., README.md)."
  line: "Specify the line number (optional, e.g., 15)." # Optional
  
how_to_check:
  - "Describe a simple check to verify the change (e.g., 'Verify text is updated in file')."

# MANDATORY: Git Operations Section  
# ⚠️ git_privacy: true = NO "Generated with Claude Code", NO "Co-Authored-By: Claude"
git_operations:
  branch_strategy: "Dynamically injected from config (e.g., 'feature/')."
  branch_protection: "Dynamically injected from config (e.g., 'true')."
  commit_format: "Dynamically generated (e.g., 'NANO-001: Fix typo')."
  privacy_filter: "Dynamically injected from config (e.g., 'true')."
  default_branch: "Dynamically injected from config (e.g., 'main')."
  version_bump: "Specify 'NONE' for trivial changes, 'PATCH' for bug fixes."

# MANDATORY: Knowledge Management Section
knowledge_management:
  structure: "memory/[topic]/[subtopic].md" # Example: memory/fix/typo-fix.md
  storage: "not-version-controlled" # Knowledge in ./memory should NEVER be version controlled for this project.
  capture: "Not typically needed for trivial changes, but can be used for insights."

# MANDATORY: Review Process Section
review_process:
  type: "no_review_needed"
  rationale: "trivial_change"

# MANDATORY: Documentation Management Section
documentation_management:
  required_updates:
    changelog:
      file: "CHANGELOG.md"
      entry_format: |
        ### Fixed
        - Describe the nano change (e.g., 'Fixed typo in README.md').
      semantic_versioning: true
      mandatory: true
      
    readme:
      file: "README.md"  
      update_required: "NO" # Set to YES if user-facing documentation is changed.
      sections_affected: "List affected sections (usually 'NONE' for nano changes)."
      
  release_management:
    github_release: "NO"     # Patch bumps don't need releases.
    release_notes: "NO"      # Trivial changes documented in CHANGELOG only.
    
  validation_checklist:
    - "CHANGELOG.md updated with fix entry"
    - "Version bumped (patch) if applicable"

# MANDATORY: Implementation Samples Section
# ⚠️ EXECUTION CHECKLIST: All 6 sections must be completed
implementation_samples:
  example_commit: "Example commit message for this PRB type."
  example_change: "Describe the specific change (e.g., 'Line 15: 'old' -> 'new'')."
  
  execution_checklist: |
    ☐ Complete Context Section - Settings loaded and applied
    ☐ Requirements Section - All requirements met  
    ☐ Git Operations Section - Commands executed with privacy_filter
    ☐ Documentation Updates Section - CHANGELOG.md and affected files updated
    ☐ Knowledge Management Section - Captured if needed
    ☐ Review Process Section - Completed or justified skip
    ☐ Documentation Management Section - CHANGELOG updated, version bumped
    ☐ Implementation Samples Section - Applied correctly
    
    SKIP NOTHING. EXECUTE EVERYTHING. DOCUMENT ALL CHANGES.
  
# Minimal overhead for trivial changes but ALL sections still mandatory