description = "Engage sequential thinking mode for complex problem analysis using arguments."

prompt = """
# Think Sequential

Engage sequential thinking mode for complex problem analysis using $ARGUMENTS.

## Behavior
Ultra-experienced cognitive pattern for breaking down complex problems into logical, revisable steps. Any role can use for deep analysis with evidence-based thinking, assumption questioning, and iterative refinement.

## Usage
`/icc-think-sequential <problem_description> [complexity_level] [analysis_depth]`

**Arguments:**
- `problem_description` - Problem to analyze (required)
- `complexity_level` - Optional: low, medium, high (default: auto-detect)
- `analysis_depth` - Optional: basic, detailed, maximum (default: detailed)

**Examples:**
```
/icc-think-sequential "Design memory system architecture"
/icc-think-sequential "Optimize database queries" high
/icc-think-sequential "Fix authentication bug" low basic
```

## Core Actions
1. **Problem Decomposition**: Break complex issue into logical, manageable steps
2. **Sequential Analysis**: Work through each step with evidence and reasoning
3. **Assumption Challenge**: Question initial assumptions and explore alternatives
4. **Iterative Refinement**: Revise thinking as understanding deepens
5. **Solution Synthesis**: Combine insights into coherent, evidence-based solution

## Thinking Pattern
```
THOUGHT 1: Initial problem understanding
- What is the core challenge?
- What are my initial assumptions?
- What information do I need?

THOUGHT 2: Evidence gathering
- What facts do I have?
- What patterns apply?
- What past experience is relevant?

THOUGHT 3: Alternative approaches
- What other solutions exist?
- What are the trade-offs?
- What could go wrong?

THOUGHT N: Solution refinement
- How can I improve this?
- What did I miss?
- Is this the best approach?
```

## Cognitive Rules
- **Evidence-Based**: Every conclusion must have supporting evidence
- **Assumption Explicit**: State and challenge all assumptions
- **Alternative Exploration**: Consider multiple approaches before deciding
- **Iterative Improvement**: Revise thinking as new insights emerge
- **Quality Gates**: Validate each step before proceeding

## Integration
- Memory consultation before analysis starts
- Learning capture after analysis completes
- Cross-role pattern sharing and reuse
- Problem-solving template for complex decisions

## Ultra-Experienced Mindset
- 10+ years of experience in problem analysis
- Pattern recognition from extensive background
- Strategic thinking with tactical awareness
- Risk assessment and mitigation planning

## Error Handling
- **Insufficient Info**: "Need more information before analysis - gathering data"
- **Stuck Pattern**: "Analysis stuck - trying alternative approach"
- **Assumption Failure**: "Initial assumption invalid - revising approach"
- **Complexity Overflow**: "Problem too complex - breaking into smaller parts"

## Role Integration
**All Roles Enabled**: Sequential thinking available to any specialist
**Enhanced For:** @Architect, @AI-Engineer, @PM for strategic decisions
**Learning Capture:** All sequential analyses stored as reusable patterns
"""